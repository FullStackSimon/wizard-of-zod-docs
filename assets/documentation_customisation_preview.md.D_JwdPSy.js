import{_ as a,c as i,a1 as s,o as t}from"./chunks/framework.CsjMFbrD.js";const u=JSON.parse('{"title":"Preview","description":"","frontmatter":{"title":"Preview"},"headers":[],"relativePath":"documentation/customisation/preview.md","filePath":"documentation/customisation/preview.md"}'),r={name:"documentation/customisation/preview.md"};function n(o,e,l,p,d,h){return t(),i("div",null,e[0]||(e[0]=[s('<h1 id="preview" tabindex="-1">Preview <a class="header-anchor" href="#preview" aria-label="Permalink to &quot;Preview&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>After completing all forms and ensuring all fields are valid, users are presented with a <strong>Preview</strong> screen. This allows them to review their inputs and make any necessary amendments before final submission.</p><h2 id="choosing-a-preview-type" tabindex="-1">Choosing a Preview Type <a class="header-anchor" href="#choosing-a-preview-type" aria-label="Permalink to &quot;Choosing a Preview Type&quot;">​</a></h2><p>The wizard supports a configurable <a href="./../api/props.html#preview">preview</a> prop, which determines how the preview is displayed. The available options are:</p><table tabindex="0"><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>&#39;cards&#39;</code></td><td>Displays preview data in a card-based layout (default).</td></tr><tr><td><code>&#39;list&#39;</code></td><td>Shows preview data in a simple list format.</td></tr><tr><td><code>&#39;table&#39;</code></td><td>Structures preview data in a tabular format for a more structured view.</td></tr></tbody></table><h3 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h3><p>To specify a preview type, set the <code>preview</code> prop:</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Wizard</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> preview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cards&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><p>or:</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Wizard</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> preview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;list&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><p>To use a table-based preview:</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Wizard</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> preview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;table&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="built-in-preview-types" tabindex="-1">Built-in Preview Types <a class="header-anchor" href="#built-in-preview-types" aria-label="Permalink to &quot;Built-in Preview Types&quot;">​</a></h2><h3 id="cards-preview-default" tabindex="-1">Cards Preview (Default) <a class="header-anchor" href="#cards-preview-default" aria-label="Permalink to &quot;Cards Preview (Default)&quot;">​</a></h3><p>The <strong>cards</strong> preview displays each form’s data in a separate card with structured content. Users can see their answers grouped neatly with titles and descriptions.</p><h3 id="list-preview" tabindex="-1">List Preview <a class="header-anchor" href="#list-preview" aria-label="Permalink to &quot;List Preview&quot;">​</a></h3><p>The <strong>list</strong> preview presents each question and answer in a straightforward, readable format. It is useful for minimalistic designs where compactness is preferred.</p><h3 id="table-preview" tabindex="-1">Table Preview <a class="header-anchor" href="#table-preview" aria-label="Permalink to &quot;Table Preview&quot;">​</a></h3><p>The <strong>table</strong> preview organizes form data into a structured table layout, making it easier to scan large amounts of information at a glance.</p><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>The <a href="./../api/props.html#preview">preview</a> prop provides flexibility in presenting user-entered data before final submission. Whether using the default <strong>cards</strong>, <strong>list</strong>, or <strong>table</strong> preview, <strong>Wizard of Zod</strong> ensures a seamless review process before submission.</p>',22)]))}const v=a(r,[["render",n]]);export{u as __pageData,v as default};
