import{_ as e,c as t,a1 as i,o as n}from"./chunks/framework.CsjMFbrD.js";const u=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/guide/getting-started.md","filePath":"documentation/guide/getting-started.md"}'),r={name:"documentation/guide/getting-started.md"};function s(o,a,l,d,h,c){return n(),t("div",null,a[0]||(a[0]=[i('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><p>The following guide explains how to get up and running with <strong>Wizard of Zod</strong>.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>This package relies on your project already having Shadcn for Vue set up and in place.</p><p>Pinia is required for state management.</p><h3 id="shadcn-for-vue" tabindex="-1">Shadcn (For Vue) <a class="header-anchor" href="#shadcn-for-vue" aria-label="Permalink to &quot;Shadcn (For Vue)&quot;">​</a></h3><p>Just in case you have been living under a rock for the last while, Shadcn is a collection of beautifully designed Tailwind components. Shadcn-vue.com is a Vue port Shadcn.</p><p>If you haven&#39;t already added shadcn-vue.com to your project, please follow the <a href="https://www.shadcn-vue.com/docs/installation.html" target="_blank" rel="noreferrer">Shadcn-vue.com installation guide</a>.</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>Shadcn-vue.com is <a href="https://www.shadcn-vue.com/docs/introduction.html" target="_blank" rel="noreferrer">NOT a component library</a> thats why we do not have it listed as a peer dependency.</p></div><h3 id="pinia" tabindex="-1">Pinia <a class="header-anchor" href="#pinia" aria-label="Permalink to &quot;Pinia&quot;">​</a></h3><p><a href="https://pinia.vuejs.org/" target="_blank" rel="noreferrer">Pinia</a> is used for state management.</p><p>When a user enters an answer into any form field in your Wizard, the answer is temporarily stored in session storage via Pinia. This allows us to:</p><ul><li>keep track of user answers</li><li>present user answers in a preview before final submission</li><li>give users an option to make changes</li><li>collect and send the final (validated) data back to you</li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Install the package with npm:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wizard-of-zod</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><h3 id="vite" tabindex="-1">Vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;Vite&quot;">​</a></h3><h3 id="typescript" tabindex="-1">Typescript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;Typescript&quot;">​</a></h3>',19)]))}const g=e(r,[["render",s]]);export{u as __pageData,g as default};
